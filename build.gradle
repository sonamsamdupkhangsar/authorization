/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "org.springframework.boot" version "3.1.0"
    id "io.spring.dependency-management" version "1.1.0"
    id "java"
}

group = 'me.sonam'
version = '1.0'
description = 'pkce-auth-server'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.0.6'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.6'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.1'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.google.code.gson:gson:2.9.1'

    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'net.sourceforge.htmlunit:htmlunit'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.1'
    testImplementation group: 'org.hsqldb', name: 'hsqldb', version: '2.0.0'
}

java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}

test {
    filter {
        //include all tests from package
        includeTestsMatching "sample"

        //include all integration tests
        includeTestsMatching "*Test*"
    }
}